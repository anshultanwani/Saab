{"ast":null,"code":"var _jsxFileName = \"/home/acer/Desktop/KarvyAssignment/Assignment/src/components/AddForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './add-form.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddForm = props => {\n  _s();\n\n  const [countryObj, updateCountry] = useState({\n    name: '',\n    continent: '',\n    rank: '',\n    flag: ''\n  });\n  const [errors, updateErrors] = useState({});\n  const [toastMsg, updateToast] = useState({\n    show: false\n  });\n\n  const showToast = msg => {\n    updateToast({\n      show: true,\n      msg\n    });\n    setTimeout(() => {\n      updateToast({\n        show: false,\n        msg\n      });\n    }, 2000);\n  };\n\n  const handleChange = (value, key) => {\n    let countryData = { ...countryObj\n    };\n    let errorData = { ...errors\n    };\n    errorData[key] = \"\";\n    countryData[key] = value;\n    updateErrors(errorData);\n    updateCountry(countryData);\n  };\n\n  const validate = (value, key) => {\n    switch (key) {\n      case 'name':\n        {\n          if (!value) {\n            return 'Please Enter mandatory Fields';\n          } else if (value.length < 3 || value.length > 20) {\n            return 'Name should be minimum 3 char and maximum 20';\n          }\n        }\n\n      case 'rank':\n        {\n          if (!value) {\n            return 'Please Enter mandatory Fields';\n          } else if (value < 0) {\n            return 'Rank cannot be negative';\n          }\n        }\n\n      default:\n        {\n          return \"\";\n        }\n    }\n  };\n\n  const onSave = () => {\n    let errorObj = {};\n    let errMsg = \"\";\n    Object.keys(countryObj).map(cur => {\n      errorObj[cur] = validate(countryObj[cur], cur);\n      errMsg = errMsg ? errMsg : errorObj[cur];\n    });\n    updateErrors(errorObj);\n    showToast(errMsg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'input-holder ' + (errors.name ? 'error' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: 'label-txt ' + (countryObj.name ? 'on-top' : ''),\n          children: \"Country Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Country Name\",\n          className: errors.name ? 'err' : '',\n          value: countryObj.name,\n          onChange: e => handleChange(e.target.value, 'name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'input-holder ' + (errors.rank ? 'error' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: 'label-txt ' + (countryObj.rank ? 'on-top' : ''),\n          children: \"Country Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Country Rank\",\n          className: errors.rank ? 'err' : '',\n          value: countryObj.rank,\n          onChange: e => handleChange(e.target.value, 'rank')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), \"            \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'input-holder ' + (errors.continent ? 'error' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: 'label-txt ' + (countryObj.continent ? 'on-top' : ''),\n          children: \"Continent Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown\",\n          value: countryObj.continent,\n          onChange: e => handleChange(props.countryData[Number(e.target.value)].continent, 'continent'),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            className: 'placeholder',\n            children: \"Select Continent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), props.countryData.map((cur, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cur.continent,\n              children: cur.continent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: onSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-holder\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'toast-alert ' + (toastMsg.show ? 'show' : toastMsg.msg ? 'hide' : ''),\n        children: toastMsg.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddForm, \"KF2S/jtzYwda32RJfrAI09LfD5Y=\");\n\n_c = AddForm;\n\nconst mapStateToProps = state => {\n  return {\n    countryData: state.countryData.countryData\n  };\n};\n\nexport default connect(mapStateToProps)(AddForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"sources":["/home/acer/Desktop/KarvyAssignment/Assignment/src/components/AddForm.jsx"],"names":["React","useState","connect","AddForm","props","countryObj","updateCountry","name","continent","rank","flag","errors","updateErrors","toastMsg","updateToast","show","showToast","msg","setTimeout","handleChange","value","key","countryData","errorData","validate","length","onSave","errorObj","errMsg","Object","keys","map","cur","e","target","Number","index","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './add-form.scss';\n\nconst AddForm = props => {\n    const [countryObj,updateCountry] = useState({\n        name: '',\n        continent: '',\n        rank: '',\n        flag: ''\n    });\n    const [errors,updateErrors] = useState({});\n    const [toastMsg,updateToast] = useState({\n        show: false\n    });\n\n    const showToast = (msg) => {\n        updateToast({\n            show: true,\n            msg\n        })\n        setTimeout(() => {\n            updateToast({\n                show: false,\n                msg\n            })\n        },2000)\n    }\n    const handleChange = (value,key) => {\n        let countryData = {...countryObj};\n        let errorData = {...errors};\n        errorData[key] = \"\";\n        countryData[key] = value;\n        updateErrors(errorData);\n        updateCountry(countryData)\n    };\n\n    const validate = (value,key) => {\n        switch (key) {\n            case 'name': {\n                if(!value){\n                    return 'Please Enter mandatory Fields';\n                }else if(value.length < 3 || value.length > 20){\n                    return 'Name should be minimum 3 char and maximum 20';\n                }\n            }\n            case 'rank': {\n                if(!value){\n                    return 'Please Enter mandatory Fields';\n                }else if(value < 0){\n                    return 'Rank cannot be negative';\n                }\n            }\n            default: {\n                return \"\";\n            }\n        }\n    }\n\n    const onSave = () => {\n        let errorObj = {};\n        let errMsg = \"\";\n        Object.keys(countryObj).map(cur => {\n            errorObj[cur] = validate(countryObj[cur],cur);\n            errMsg = errMsg?errMsg:errorObj[cur];\n        })\n        updateErrors(errorObj);\n        showToast(errMsg);\n    }\n\n    return (\n        <>\n            <div className='add-form'>\n                <div className={'input-holder '+(errors.name?'error':'')}>\n                    <label className={'label-txt '+(countryObj.name?'on-top':'')}>Country Name</label>\n                    <input type=\"text\" placeholder='Country Name' className={errors.name?'err':''} value={countryObj.name} onChange={e => handleChange(e.target.value,'name')} />\n                </div>\n                <div className={'input-holder '+(errors.rank?'error':'')}>\n                    <label className={'label-txt '+(countryObj.rank?'on-top':'')}>Country Rank</label>\n                    <input type=\"number\" placeholder=\"Country Rank\" className={errors.rank?'err':''} value={countryObj.rank} onChange={e => handleChange(e.target.value,'rank')}/>            </div>\n                <div className={'input-holder '+(errors.continent?'error':'')}>\n                    <label className={'label-txt '+(countryObj.continent?'on-top':'')}>Continent Name</label>\n                    <select className='dropdown' value={countryObj.continent} onChange={(e) => handleChange(props.countryData[Number(e.target.value)].continent,'continent')}>\n                        <option value={0} className={'placeholder'}>Select Continent</option>\n                        {props.countryData.map((cur,index) => {\n                            return <option value={cur.continent}>{cur.continent}</option>\n                        })}\n                    </select>\n                    {/* <input type=\"text\" placeholder=\"Continent Name\" className='' value={countryObj.continent} onChange={e => handleChange(e.target.value,'continent')} /> */}\n                </div>\n                <input type=\"file\" />\n                <button className='btn' onClick={onSave}>Save</button>\n            </div>\n            <div className='toast-holder'>\n                <div className={'toast-alert '+(toastMsg.show?'show':toastMsg.msg?'hide':'')}>\n                    {toastMsg.msg}\n                </div>\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        countryData: state.countryData.countryData\n    }\n}\n\nexport default connect(mapStateToProps)(AddForm);"]},"metadata":{},"sourceType":"module"}