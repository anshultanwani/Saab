{"ast":null,"code":"var _jsxFileName = \"/home/acer/Desktop/KarvyAssignment/Assignment/src/components/AddForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './add-form.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddForm = props => {\n  _s();\n\n  const [countryObj, updateCountry] = useState({\n    name: '',\n    continent: '',\n    rank: '',\n    flag: ''\n  });\n  const [errors, updateErrors] = useState({});\n\n  const handleChange = (value, key) => {\n    let countryData = { ...countryObj\n    };\n    let errorData = { ...errors\n    };\n    errorData[key] = \"\";\n    countryData[key] = value;\n    updateErrors(errorData);\n    updateCountry(countryData);\n  };\n\n  const validate = (value, key) => {\n    switch (key) {\n      case 'name':\n        {\n          if (value.length < 3 && value.length > 20) {\n            return 'Name should be minimum 3 char and maximum 20';\n          }\n        }\n\n      case 'rank':\n        {\n          if (value < 0) {\n            return 'Rank cannot be negative';\n          }\n        }\n\n      default:\n        {\n          return \"\";\n        }\n    }\n  };\n\n  const onSave = () => {\n    let errorObj = {};\n    let errMsg = \"\";\n    Object.keys(countryObj).map(cur => {\n      errorObj[cur] = validate(countryObj[cur], cur);\n      errMsg = errMsg ? errMsg : errorObj[cur];\n    });\n    alert(errMsg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'label-txt ' + (countryObj.name ? 'on-top' : ''),\n        children: \"Country Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Country Name\",\n        className: errors.name ? 'err' : '',\n        value: countryObj.name,\n        onChange: e => handleChange(e.target.value, 'name')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'label-txt ' + (countryObj.rank ? 'on-top' : ''),\n        children: \"Country Rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Country Rank\",\n        className: errors.rank ? 'err' : '',\n        value: countryObj.rank,\n        onChange: e => handleChange(e.target.value, 'rank')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), \"            \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'label-txt ' + (countryObj.continent ? 'on-top' : ''),\n        children: \"Continent Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Continent Name\",\n        className: \"\",\n        value: countryObj.continent,\n        onChange: e => handleChange(e.target.value, 'continent')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: onSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddForm, \"6Lu+zeGYc35pf3Ir0iNY05d/lM0=\");\n\n_c = AddForm;\nexport default AddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"sources":["/home/acer/Desktop/KarvyAssignment/Assignment/src/components/AddForm.jsx"],"names":["React","useState","AddForm","props","countryObj","updateCountry","name","continent","rank","flag","errors","updateErrors","handleChange","value","key","countryData","errorData","validate","length","onSave","errorObj","errMsg","Object","keys","map","cur","alert","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './add-form.scss';\n\nconst AddForm = props => {\n    const [countryObj,updateCountry] = useState({\n        name: '',\n        continent: '',\n        rank: '',\n        flag: ''\n    });\n    const [errors,updateErrors] = useState({});\n\n    const handleChange = (value,key) => {\n        let countryData = {...countryObj};\n        let errorData = {...errors};\n        errorData[key] = \"\";\n        countryData[key] = value;\n        updateErrors(errorData);\n        updateCountry(countryData)\n    };\n\n    const validate = (value,key) => {\n        switch (key) {\n            case 'name': {\n                if(value.length < 3 && value.length > 20){\n                    return 'Name should be minimum 3 char and maximum 20';\n                }\n            }\n            case 'rank': {\n                if(value < 0){\n                    return 'Rank cannot be negative';\n                }\n            }\n            default: {\n                return \"\";\n            }\n        }\n    }\n\n    const onSave = () => {\n        let errorObj = {};\n        let errMsg = \"\";\n        Object.keys(countryObj).map(cur => {\n            errorObj[cur] = validate(countryObj[cur],cur);\n            errMsg = errMsg?errMsg:errorObj[cur];\n        })\n        alert(errMsg);\n    }\n    return (\n        <div className='add-form'>\n            <div className='input-holder'>\n                <label className={'label-txt '+(countryObj.name?'on-top':'')}>Country Name</label>\n                <input type=\"text\" placeholder='Country Name' className={errors.name?'err':''} value={countryObj.name} onChange={e => handleChange(e.target.value,'name')} />\n            </div>\n            <div className='input-holder'>\n                <label className={'label-txt '+(countryObj.rank?'on-top':'')}>Country Rank</label>\n                <input type=\"number\" placeholder=\"Country Rank\" className={errors.rank?'err':''} value={countryObj.rank} onChange={e => handleChange(e.target.value,'rank')}/>            </div>\n            <div className='input-holder'>\n                <label className={'label-txt '+(countryObj.continent?'on-top':'')}>Continent Name</label>\n                <input type=\"text\" placeholder=\"Continent Name\" className='' value={countryObj.continent} onChange={e => handleChange(e.target.value,'continent')} />\n            </div>\n            <input type=\"file\" />\n            <button className='btn' onClick={onSave}>Save</button>\n        </div>\n    )\n};\n\nexport default AddForm;"]},"metadata":{},"sourceType":"module"}