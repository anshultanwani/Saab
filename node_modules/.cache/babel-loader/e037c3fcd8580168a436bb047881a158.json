{"ast":null,"code":"var _jsxFileName = \"/home/acer/Desktop/KarvyAssignment/Assignment/src/components/AddForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCountry } from '../actions';\nimport './add-form.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddForm = props => {\n  _s();\n\n  const [countryObj, updateCountry] = useState({\n    name: '',\n    continent: '',\n    rank: '',\n    flag: ''\n  });\n  const [errors, updateErrors] = useState({});\n  const [toastMsg, updateToast] = useState({\n    show: false\n  });\n\n  const showToast = msg => {\n    updateToast({\n      show: true,\n      msg\n    });\n    setTimeout(() => {\n      updateToast({\n        show: false,\n        msg\n      });\n    }, 2000);\n  };\n\n  const handleChange = (value, key) => {\n    let countryData = { ...countryObj\n    };\n    let errorData = { ...errors\n    };\n    errorData[key] = \"\";\n    countryData[key] = value;\n    updateErrors(errorData);\n    updateCountry(countryData);\n  };\n\n  const validate = (value, key) => {\n    switch (key) {\n      case 'name':\n        {\n          if (!value) {\n            return 'Please Enter mandatory Fields';\n          } else if (value.length < 3 || value.length > 20) {\n            return 'Name should be minimum 3 char and maximum 20';\n          }\n        }\n\n      case 'rank':\n        {\n          if (!value) {\n            return 'Please Enter mandatory Fields';\n          } else if (value < 0) {\n            return 'Rank cannot be negative';\n          }\n        }\n\n      case 'flag':\n        {\n          if (!value) {\n            return 'Please upload flag image';\n          }\n        }\n\n      default:\n        {\n          return \"\";\n        }\n    }\n  };\n\n  const onSave = () => {\n    let errorObj = {};\n    let errMsg = \"\";\n    Object.keys(countryObj).map(cur => {\n      errorObj[cur] = validate(countryObj[cur], cur);\n      errMsg = errMsg ? errMsg : errorObj[cur];\n    });\n    updateErrors(errorObj);\n\n    if (errMsg) {\n      showToast(errMsg);\n      return;\n    }\n\n    props.updateCountry(countryObj);\n    props.onHidden();\n  };\n\n  const getOptionList = () => {\n    let option = {};\n    let optionList = [];\n    props.countryData.map((cur, index) => {\n      if (!option[cur.continent]) {\n        option[cur.continent] = true;\n        optionList.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cur.continent,\n          children: cur.continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this));\n      }\n    });\n    return optionList;\n  };\n\n  const onFileUpload = e => {\n    if (['image/png', 'image/jpg', 'image/jpeg'].includes(e.target.files[0].type) && e.target.files[0].size < 4 * 1024 * 1024) {\n      console.log(e.target.value);\n      let countryData = { ...countryObj\n      };\n      countryData['flag'] = e.target.value;\n      updateCountry(countryData);\n    } else {\n      showToast('Flag image should be less than 4 MB and can only be JPG & PNG');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'input-holder ' + (errors.name ? 'error' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: 'label-txt ' + (countryObj.name ? 'on-top' : ''),\n          children: \"Country Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Country Name\",\n          className: errors.name ? 'err' : '',\n          value: countryObj.name,\n          onChange: e => handleChange(e.target.value, 'name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'input-holder ' + (errors.rank ? 'error' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: 'label-txt ' + (countryObj.rank ? 'on-top' : ''),\n          children: \"Country Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Country Rank\",\n          className: errors.rank ? 'err' : '',\n          value: countryObj.rank,\n          onChange: e => handleChange(e.target.value, 'rank')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), \"            \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'input-holder ' + (errors.continent ? 'error' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: 'label-txt ' + (countryObj.continent && countryObj.continent != \"0\" ? 'on-top' : ''),\n          children: \"Continent Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown\",\n          value: countryObj.continent,\n          onChange: e => handleChange(e.target.value, 'continent'),\n          style: !countryObj.continent || countryObj.continent == \"0\" ? {\n            color: '#718190'\n          } : {},\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            className: 'placeholder',\n            children: \"Select Continent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), getOptionList()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-btn\",\n        children: [\"Upload Flag\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => onFileUpload(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), countryObj.flag ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#0087ff',\n          marginBottom: '10px'\n        },\n        children: \"File Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: onSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-holder\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'toast-alert ' + (toastMsg.show ? 'show' : toastMsg.msg ? 'hide' : ''),\n        children: toastMsg.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddForm, \"KF2S/jtzYwda32RJfrAI09LfD5Y=\");\n\n_c = AddForm;\n\nconst mapStateToProps = state => {\n  return {\n    countryData: state.countryData.countryData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCountry\n})(AddForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"sources":["/home/acer/Desktop/KarvyAssignment/Assignment/src/components/AddForm.jsx"],"names":["React","useState","connect","updateCountry","AddForm","props","countryObj","name","continent","rank","flag","errors","updateErrors","toastMsg","updateToast","show","showToast","msg","setTimeout","handleChange","value","key","countryData","errorData","validate","length","onSave","errorObj","errMsg","Object","keys","map","cur","onHidden","getOptionList","option","optionList","index","push","onFileUpload","e","includes","target","files","type","size","console","log","color","marginBottom","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAO,iBAAP;;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAYH,aAAZ,IAA6BF,QAAQ,CAAC;AACxCM,IAAAA,IAAI,EAAE,EADkC;AAExCC,IAAAA,SAAS,EAAE,EAF6B;AAGxCC,IAAAA,IAAI,EAAE,EAHkC;AAIxCC,IAAAA,IAAI,EAAE;AAJkC,GAAD,CAA3C;AAMA,QAAM,CAACC,MAAD,EAAQC,YAAR,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAAC;AACpCc,IAAAA,IAAI,EAAE;AAD8B,GAAD,CAAvC;;AAIA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACvBH,IAAAA,WAAW,CAAC;AACRC,MAAAA,IAAI,EAAE,IADE;AAERE,MAAAA;AAFQ,KAAD,CAAX;AAIAC,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,WAAW,CAAC;AACRC,QAAAA,IAAI,EAAE,KADE;AAERE,QAAAA;AAFQ,OAAD,CAAX;AAIH,KALS,EAKR,IALQ,CAAV;AAMH,GAXD;;AAYA,QAAME,YAAY,GAAG,CAACC,KAAD,EAAOC,GAAP,KAAe;AAChC,QAAIC,WAAW,GAAG,EAAC,GAAGhB;AAAJ,KAAlB;AACA,QAAIiB,SAAS,GAAG,EAAC,GAAGZ;AAAJ,KAAhB;AACAY,IAAAA,SAAS,CAACF,GAAD,CAAT,GAAiB,EAAjB;AACAC,IAAAA,WAAW,CAACD,GAAD,CAAX,GAAmBD,KAAnB;AACAR,IAAAA,YAAY,CAACW,SAAD,CAAZ;AACApB,IAAAA,aAAa,CAACmB,WAAD,CAAb;AACH,GAPD;;AASA,QAAME,QAAQ,GAAG,CAACJ,KAAD,EAAOC,GAAP,KAAe;AAC5B,YAAQA,GAAR;AACI,WAAK,MAAL;AAAa;AACT,cAAG,CAACD,KAAJ,EAAU;AACN,mBAAO,+BAAP;AACH,WAFD,MAEM,IAAGA,KAAK,CAACK,MAAN,GAAe,CAAf,IAAoBL,KAAK,CAACK,MAAN,GAAe,EAAtC,EAAyC;AAC3C,mBAAO,8CAAP;AACH;AACJ;;AACD,WAAK,MAAL;AAAa;AACT,cAAG,CAACL,KAAJ,EAAU;AACN,mBAAO,+BAAP;AACH,WAFD,MAEM,IAAGA,KAAK,GAAG,CAAX,EAAa;AACf,mBAAO,yBAAP;AACH;AACJ;;AACD,WAAK,MAAL;AAAa;AACT,cAAG,CAACA,KAAJ,EAAW;AACP,mBAAO,0BAAP;AACH;AACJ;;AACD;AAAS;AACL,iBAAO,EAAP;AACH;AAtBL;AAwBH,GAzBD;;AA2BA,QAAMM,MAAM,GAAG,MAAM;AACjB,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,MAAM,GAAG,EAAb;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYxB,UAAZ,EAAwByB,GAAxB,CAA4BC,GAAG,IAAI;AAC/BL,MAAAA,QAAQ,CAACK,GAAD,CAAR,GAAgBR,QAAQ,CAAClB,UAAU,CAAC0B,GAAD,CAAX,EAAiBA,GAAjB,CAAxB;AACAJ,MAAAA,MAAM,GAAGA,MAAM,GAACA,MAAD,GAAQD,QAAQ,CAACK,GAAD,CAA/B;AACH,KAHD;AAIApB,IAAAA,YAAY,CAACe,QAAD,CAAZ;;AACA,QAAGC,MAAH,EAAU;AACNZ,MAAAA,SAAS,CAACY,MAAD,CAAT;AACA;AACH;;AACDvB,IAAAA,KAAK,CAACF,aAAN,CAAoBG,UAApB;AACAD,IAAAA,KAAK,CAAC4B,QAAN;AACH,GAdD;;AAgBA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA/B,IAAAA,KAAK,CAACiB,WAAN,CAAkBS,GAAlB,CAAsB,CAACC,GAAD,EAAKK,KAAL,KAAe;AACjC,UAAG,CAACF,MAAM,CAACH,GAAG,CAACxB,SAAL,CAAV,EAA0B;AACtB2B,QAAAA,MAAM,CAACH,GAAG,CAACxB,SAAL,CAAN,GAAwB,IAAxB;AACA4B,QAAAA,UAAU,CAACE,IAAX,eAAgB;AAAQ,UAAA,KAAK,EAAEN,GAAG,CAACxB,SAAnB;AAAA,oBAA+BwB,GAAG,CAACxB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAAhB;AACH;AACR,KALG;AAMA,WAAO4B,UAAP;AACH,GAVD;;AAYA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAG,CAAC,WAAD,EAAa,WAAb,EAAyB,YAAzB,EAAuCC,QAAvC,CAAgDD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAlE,KAA2EJ,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAlB,GAAyB,IAAI,IAAJ,GAAW,IAAlH,EAAuH;AACnHC,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACE,MAAF,CAAStB,KAArB;AACA,UAAIE,WAAW,GAAG,EAAC,GAAGhB;AAAJ,OAAlB;AACAgB,MAAAA,WAAW,CAAC,MAAD,CAAX,GAAsBkB,CAAC,CAACE,MAAF,CAAStB,KAA/B;AACAjB,MAAAA,aAAa,CAACmB,WAAD,CAAb;AACH,KALD,MAKM;AACFN,MAAAA,SAAS,CAAC,+DAAD,CAAT;AACH;AACJ,GATD;;AAWA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE,mBAAiBL,MAAM,CAACJ,IAAP,GAAY,OAAZ,GAAoB,EAArC,CAAhB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,gBAAcD,UAAU,CAACC,IAAX,GAAgB,QAAhB,GAAyB,EAAvC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,cAA/B;AAA8C,UAAA,SAAS,EAAEI,MAAM,CAACJ,IAAP,GAAY,KAAZ,GAAkB,EAA3E;AAA+E,UAAA,KAAK,EAAED,UAAU,CAACC,IAAjG;AAAuG,UAAA,QAAQ,EAAEiC,CAAC,IAAIrB,YAAY,CAACqB,CAAC,CAACE,MAAF,CAAStB,KAAV,EAAgB,MAAhB;AAAlI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAE,mBAAiBT,MAAM,CAACF,IAAP,GAAY,OAAZ,GAAoB,EAArC,CAAhB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,gBAAcH,UAAU,CAACG,IAAX,GAAgB,QAAhB,GAAyB,EAAvC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,WAAW,EAAC,cAAjC;AAAgD,UAAA,SAAS,EAAEE,MAAM,CAACF,IAAP,GAAY,KAAZ,GAAkB,EAA7E;AAAiF,UAAA,KAAK,EAAEH,UAAU,CAACG,IAAnG;AAAyG,UAAA,QAAQ,EAAE+B,CAAC,IAAIrB,YAAY,CAACqB,CAAC,CAACE,MAAF,CAAStB,KAAV,EAAgB,MAAhB;AAApI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAK,QAAA,SAAS,EAAE,mBAAiBT,MAAM,CAACH,SAAP,GAAiB,OAAjB,GAAyB,EAA1C,CAAhB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,gBAAcF,UAAU,CAACE,SAAX,IAAwBF,UAAU,CAACE,SAAX,IAAwB,GAAhD,GAAoD,QAApD,GAA6D,EAA3E,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAA6B,UAAA,KAAK,EAAEF,UAAU,CAACE,SAA/C;AAA0D,UAAA,QAAQ,EAAGgC,CAAD,IAAOrB,YAAY,CAACqB,CAAC,CAACE,MAAF,CAAStB,KAAV,EAAgB,WAAhB,CAAvF;AAAqH,UAAA,KAAK,EAAE,CAACd,UAAU,CAACE,SAAZ,IAAyBF,UAAU,CAACE,SAAX,IAAwB,GAAjD,GAAqD;AAACwC,YAAAA,KAAK,EAAE;AAAR,WAArD,GAAwE,EAApM;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAE,CAAf;AAAkB,YAAA,SAAS,EAAE,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKd,aAAa,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAgBI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+CAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEM,CAAC,IAAID,YAAY,CAACC,CAAD;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,EAoBKlC,UAAU,CAACI,IAAX,gBACD;AAAK,QAAA,KAAK,EAAE;AAACsC,UAAAA,KAAK,EAAE,SAAR;AAAkBC,UAAAA,YAAY,EAAE;AAAhC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,GACwE,IArB7E,eAuBI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEvB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA0BI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,kBAAgBb,QAAQ,CAACE,IAAT,GAAc,MAAd,GAAqBF,QAAQ,CAACI,GAAT,GAAa,MAAb,GAAoB,EAAzD,CAAhB;AAAA,kBACKJ,QAAQ,CAACI;AADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA,kBADJ;AAkCH,CArID;;GAAMb,O;;KAAAA,O;;AAuIN,MAAM8C,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH7B,IAAAA,WAAW,EAAE6B,KAAK,CAAC7B,WAAN,CAAkBA;AAD5B,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAACgD,eAAD,EAAiB;AAAC/C,EAAAA;AAAD,CAAjB,CAAP,CAAyCC,OAAzC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCountry } from '../actions'\nimport './add-form.scss';\n\nconst AddForm = props => {\n    const [countryObj,updateCountry] = useState({\n        name: '',\n        continent: '',\n        rank: '',\n        flag: ''\n    });\n    const [errors,updateErrors] = useState({});\n    const [toastMsg,updateToast] = useState({\n        show: false\n    });\n\n    const showToast = (msg) => {\n        updateToast({\n            show: true,\n            msg\n        })\n        setTimeout(() => {\n            updateToast({\n                show: false,\n                msg\n            })\n        },2000)\n    }\n    const handleChange = (value,key) => {\n        let countryData = {...countryObj};\n        let errorData = {...errors};\n        errorData[key] = \"\";\n        countryData[key] = value;\n        updateErrors(errorData);\n        updateCountry(countryData)\n    };\n\n    const validate = (value,key) => {\n        switch (key) {\n            case 'name': {\n                if(!value){\n                    return 'Please Enter mandatory Fields';\n                }else if(value.length < 3 || value.length > 20){\n                    return 'Name should be minimum 3 char and maximum 20';\n                }\n            }\n            case 'rank': {\n                if(!value){\n                    return 'Please Enter mandatory Fields';\n                }else if(value < 0){\n                    return 'Rank cannot be negative';\n                }\n            }\n            case 'flag': {\n                if(!value) {\n                    return 'Please upload flag image';\n                }\n            }\n            default: {\n                return \"\";\n            }\n        }\n    }\n\n    const onSave = () => {\n        let errorObj = {};\n        let errMsg = \"\";\n        Object.keys(countryObj).map(cur => {\n            errorObj[cur] = validate(countryObj[cur],cur);\n            errMsg = errMsg?errMsg:errorObj[cur];\n        })\n        updateErrors(errorObj);\n        if(errMsg){\n            showToast(errMsg);\n            return;\n        }\n        props.updateCountry(countryObj)\n        props.onHidden();\n    }\n\n    const getOptionList = () => {\n        let option = {};\n        let optionList = [];\n        props.countryData.map((cur,index) => {\n            if(!option[cur.continent]){\n                option[cur.continent] = true;\n                optionList.push(<option value={cur.continent}>{cur.continent}</option>);\n            }\n    })\n        return optionList;\n    }\n\n    const onFileUpload = e => {\n        if(['image/png','image/jpg','image/jpeg'].includes(e.target.files[0].type) && e.target.files[0].size < 4 * 1024 * 1024){\n            console.log(e.target.value)\n            let countryData = {...countryObj};\n            countryData['flag'] = e.target.value;\n            updateCountry(countryData);\n        }else {\n            showToast('Flag image should be less than 4 MB and can only be JPG & PNG')\n        }\n    }\n\n    return (\n        <>\n            <div className='add-form'>\n                <div className={'input-holder '+(errors.name?'error':'')}>\n                    <label className={'label-txt '+(countryObj.name?'on-top':'')}>Country Name</label>\n                    <input type=\"text\" placeholder='Country Name' className={errors.name?'err':''} value={countryObj.name} onChange={e => handleChange(e.target.value,'name')} />\n                </div>\n                <div className={'input-holder '+(errors.rank?'error':'')}>\n                    <label className={'label-txt '+(countryObj.rank?'on-top':'')}>Country Rank</label>\n                    <input type=\"number\" placeholder=\"Country Rank\" className={errors.rank?'err':''} value={countryObj.rank} onChange={e => handleChange(e.target.value,'rank')}/>            </div>\n                <div className={'input-holder '+(errors.continent?'error':'')}>\n                    <label className={'label-txt '+(countryObj.continent && countryObj.continent != \"0\"?'on-top':'')}>Continent Name</label>\n                    <select className='dropdown' value={countryObj.continent} onChange={(e) => handleChange(e.target.value,'continent')} style={!countryObj.continent || countryObj.continent == \"0\"?{color: '#718190'}:{}}>\n                        <option value={0} className={'placeholder'}>Select Continent</option>\n                        {getOptionList()}\n                    </select>\n                    {/* <input type=\"text\" placeholder=\"Continent Name\" className='' value={countryObj.continent} onChange={e => handleChange(e.target.value,'continent')} /> */}\n                </div>\n                <button className='upload-btn'>\n                    Upload Flag\n                    <input type=\"file\" onChange={e => onFileUpload(e)}/>\n                </button>\n                {countryObj.flag?\n                <div style={{color: '#0087ff',marginBottom: '10px'}}>File Uploaded</div>:null\n                }\n                <button className='btn' onClick={onSave}>Save</button>\n            </div>\n            <div className='toast-holder'>\n                <div className={'toast-alert '+(toastMsg.show?'show':toastMsg.msg?'hide':'')}>\n                    {toastMsg.msg}\n                </div>\n            </div>\n        </>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        countryData: state.countryData.countryData\n    }\n}\n\nexport default connect(mapStateToProps,{updateCountry})(AddForm);"]},"metadata":{},"sourceType":"module"}